// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as IndexImport } from './../../routes/index'
import { Route as StrategyIndexImport } from './../../routes/strategy/index'
import { Route as RadarsIndexImport } from './../../routes/radars/index'
import { Route as PricingIndexImport } from './../../routes/pricing/index'
import { Route as MarketplaceIndexImport } from './../../routes/marketplace/index'
import { Route as LucyIndexImport } from './../../routes/lucy/index'
import { Route as EmailWriterIndexImport } from './../../routes/email-writer.index'
import { Route as EbookMachineIndexImport } from './../../routes/ebook-machine/index'
import { Route as DashboardIndexImport } from './../../routes/dashboard/index'
import { Route as CreditsIndexImport } from './../../routes/credits/index'
import { Route as ChallengesIndexImport } from './../../routes/challenges/index'
import { Route as BoardsIndexImport } from './../../routes/boards/index'
import { Route as StrategyCanvasIndexImport } from './../../routes/strategy/canvas/index'
import { Route as MarketsNewIndexImport } from './../../routes/markets/new.index'
import { Route as MarketsMarketIdIndexImport } from './../../routes/markets/$marketId.index'
import { Route as MarketplaceListingIdIndexImport } from './../../routes/marketplace/$listingId.index'
import { Route as DashboardPreferencesIndexImport } from './../../routes/dashboard/preferences.index'
import { Route as ChallengesChallengeIdIndexImport } from './../../routes/challenges/$challengeId.index'
import { Route as BoardsBoardIdIndexImport } from './../../routes/boards/$boardId.index'
import { Route as AuthRegisterIndexImport } from './../../routes/auth/register.index'
import { Route as AuthLoginIndexImport } from './../../routes/auth/login.index'
import { Route as OpportunitiesOpportunityIdScenariosIndexImport } from './../../routes/opportunities/$opportunityId/scenarios.index'
import { Route as MarketsMarketIdSegmentsNewIndexImport } from './../../routes/markets/$marketId/segments/new.index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StrategyIndexRoute = StrategyIndexImport.update({
  id: '/strategy/',
  path: '/strategy/',
  getParentRoute: () => rootRoute,
} as any)

const RadarsIndexRoute = RadarsIndexImport.update({
  id: '/radars/',
  path: '/radars/',
  getParentRoute: () => rootRoute,
} as any)

const PricingIndexRoute = PricingIndexImport.update({
  id: '/pricing/',
  path: '/pricing/',
  getParentRoute: () => rootRoute,
} as any)

const MarketplaceIndexRoute = MarketplaceIndexImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRoute,
} as any)

const LucyIndexRoute = LucyIndexImport.update({
  id: '/lucy/',
  path: '/lucy/',
  getParentRoute: () => rootRoute,
} as any)

const EmailWriterIndexRoute = EmailWriterIndexImport.update({
  id: '/email-writer/',
  path: '/email-writer/',
  getParentRoute: () => rootRoute,
} as any)

const EbookMachineIndexRoute = EbookMachineIndexImport.update({
  id: '/ebook-machine/',
  path: '/ebook-machine/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const CreditsIndexRoute = CreditsIndexImport.update({
  id: '/credits/',
  path: '/credits/',
  getParentRoute: () => rootRoute,
} as any)

const ChallengesIndexRoute = ChallengesIndexImport.update({
  id: '/challenges/',
  path: '/challenges/',
  getParentRoute: () => rootRoute,
} as any)

const BoardsIndexRoute = BoardsIndexImport.update({
  id: '/boards/',
  path: '/boards/',
  getParentRoute: () => rootRoute,
} as any)

const StrategyCanvasIndexRoute = StrategyCanvasIndexImport.update({
  id: '/strategy/canvas/',
  path: '/strategy/canvas/',
  getParentRoute: () => rootRoute,
} as any)

const MarketsNewIndexRoute = MarketsNewIndexImport.update({
  id: '/markets/new/',
  path: '/markets/new/',
  getParentRoute: () => rootRoute,
} as any)

const MarketsMarketIdIndexRoute = MarketsMarketIdIndexImport.update({
  id: '/markets/$marketId/',
  path: '/markets/$marketId/',
  getParentRoute: () => rootRoute,
} as any)

const MarketplaceListingIdIndexRoute = MarketplaceListingIdIndexImport.update({
  id: '/marketplace/$listingId/',
  path: '/marketplace/$listingId/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardPreferencesIndexRoute = DashboardPreferencesIndexImport.update({
  id: '/dashboard/preferences/',
  path: '/dashboard/preferences/',
  getParentRoute: () => rootRoute,
} as any)

const ChallengesChallengeIdIndexRoute = ChallengesChallengeIdIndexImport.update(
  {
    id: '/challenges/$challengeId/',
    path: '/challenges/$challengeId/',
    getParentRoute: () => rootRoute,
  } as any,
)

const BoardsBoardIdIndexRoute = BoardsBoardIdIndexImport.update({
  id: '/boards/$boardId/',
  path: '/boards/$boardId/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/auth/register/',
  path: '/auth/register/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any)

const OpportunitiesOpportunityIdScenariosIndexRoute =
  OpportunitiesOpportunityIdScenariosIndexImport.update({
    id: '/opportunities/$opportunityId/scenarios/',
    path: '/opportunities/$opportunityId/scenarios/',
    getParentRoute: () => rootRoute,
  } as any)

const MarketsMarketIdSegmentsNewIndexRoute =
  MarketsMarketIdSegmentsNewIndexImport.update({
    id: '/markets/$marketId/segments/new/',
    path: '/markets/$marketId/segments/new/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/boards/': {
      id: '/boards/'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof BoardsIndexImport
      parentRoute: typeof rootRoute
    }
    '/challenges/': {
      id: '/challenges/'
      path: '/challenges'
      fullPath: '/challenges'
      preLoaderRoute: typeof ChallengesIndexImport
      parentRoute: typeof rootRoute
    }
    '/credits/': {
      id: '/credits/'
      path: '/credits'
      fullPath: '/credits'
      preLoaderRoute: typeof CreditsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/ebook-machine/': {
      id: '/ebook-machine/'
      path: '/ebook-machine'
      fullPath: '/ebook-machine'
      preLoaderRoute: typeof EbookMachineIndexImport
      parentRoute: typeof rootRoute
    }
    '/email-writer/': {
      id: '/email-writer/'
      path: '/email-writer'
      fullPath: '/email-writer'
      preLoaderRoute: typeof EmailWriterIndexImport
      parentRoute: typeof rootRoute
    }
    '/lucy/': {
      id: '/lucy/'
      path: '/lucy'
      fullPath: '/lucy'
      preLoaderRoute: typeof LucyIndexImport
      parentRoute: typeof rootRoute
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexImport
      parentRoute: typeof rootRoute
    }
    '/pricing/': {
      id: '/pricing/'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingIndexImport
      parentRoute: typeof rootRoute
    }
    '/radars/': {
      id: '/radars/'
      path: '/radars'
      fullPath: '/radars'
      preLoaderRoute: typeof RadarsIndexImport
      parentRoute: typeof rootRoute
    }
    '/strategy/': {
      id: '/strategy/'
      path: '/strategy'
      fullPath: '/strategy'
      preLoaderRoute: typeof StrategyIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/boards/$boardId/': {
      id: '/boards/$boardId/'
      path: '/boards/$boardId'
      fullPath: '/boards/$boardId'
      preLoaderRoute: typeof BoardsBoardIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/challenges/$challengeId/': {
      id: '/challenges/$challengeId/'
      path: '/challenges/$challengeId'
      fullPath: '/challenges/$challengeId'
      preLoaderRoute: typeof ChallengesChallengeIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/preferences/': {
      id: '/dashboard/preferences/'
      path: '/dashboard/preferences'
      fullPath: '/dashboard/preferences'
      preLoaderRoute: typeof DashboardPreferencesIndexImport
      parentRoute: typeof rootRoute
    }
    '/marketplace/$listingId/': {
      id: '/marketplace/$listingId/'
      path: '/marketplace/$listingId'
      fullPath: '/marketplace/$listingId'
      preLoaderRoute: typeof MarketplaceListingIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/markets/$marketId/': {
      id: '/markets/$marketId/'
      path: '/markets/$marketId'
      fullPath: '/markets/$marketId'
      preLoaderRoute: typeof MarketsMarketIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/markets/new/': {
      id: '/markets/new/'
      path: '/markets/new'
      fullPath: '/markets/new'
      preLoaderRoute: typeof MarketsNewIndexImport
      parentRoute: typeof rootRoute
    }
    '/strategy/canvas/': {
      id: '/strategy/canvas/'
      path: '/strategy/canvas'
      fullPath: '/strategy/canvas'
      preLoaderRoute: typeof StrategyCanvasIndexImport
      parentRoute: typeof rootRoute
    }
    '/opportunities/$opportunityId/scenarios/': {
      id: '/opportunities/$opportunityId/scenarios/'
      path: '/opportunities/$opportunityId/scenarios'
      fullPath: '/opportunities/$opportunityId/scenarios'
      preLoaderRoute: typeof OpportunitiesOpportunityIdScenariosIndexImport
      parentRoute: typeof rootRoute
    }
    '/markets/$marketId/segments/new/': {
      id: '/markets/$marketId/segments/new/'
      path: '/markets/$marketId/segments/new'
      fullPath: '/markets/$marketId/segments/new'
      preLoaderRoute: typeof MarketsMarketIdSegmentsNewIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/boards': typeof BoardsIndexRoute
  '/challenges': typeof ChallengesIndexRoute
  '/credits': typeof CreditsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/ebook-machine': typeof EbookMachineIndexRoute
  '/email-writer': typeof EmailWriterIndexRoute
  '/lucy': typeof LucyIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/pricing': typeof PricingIndexRoute
  '/radars': typeof RadarsIndexRoute
  '/strategy': typeof StrategyIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/boards/$boardId': typeof BoardsBoardIdIndexRoute
  '/challenges/$challengeId': typeof ChallengesChallengeIdIndexRoute
  '/dashboard/preferences': typeof DashboardPreferencesIndexRoute
  '/marketplace/$listingId': typeof MarketplaceListingIdIndexRoute
  '/markets/$marketId': typeof MarketsMarketIdIndexRoute
  '/markets/new': typeof MarketsNewIndexRoute
  '/strategy/canvas': typeof StrategyCanvasIndexRoute
  '/opportunities/$opportunityId/scenarios': typeof OpportunitiesOpportunityIdScenariosIndexRoute
  '/markets/$marketId/segments/new': typeof MarketsMarketIdSegmentsNewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/boards': typeof BoardsIndexRoute
  '/challenges': typeof ChallengesIndexRoute
  '/credits': typeof CreditsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/ebook-machine': typeof EbookMachineIndexRoute
  '/email-writer': typeof EmailWriterIndexRoute
  '/lucy': typeof LucyIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/pricing': typeof PricingIndexRoute
  '/radars': typeof RadarsIndexRoute
  '/strategy': typeof StrategyIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/boards/$boardId': typeof BoardsBoardIdIndexRoute
  '/challenges/$challengeId': typeof ChallengesChallengeIdIndexRoute
  '/dashboard/preferences': typeof DashboardPreferencesIndexRoute
  '/marketplace/$listingId': typeof MarketplaceListingIdIndexRoute
  '/markets/$marketId': typeof MarketsMarketIdIndexRoute
  '/markets/new': typeof MarketsNewIndexRoute
  '/strategy/canvas': typeof StrategyCanvasIndexRoute
  '/opportunities/$opportunityId/scenarios': typeof OpportunitiesOpportunityIdScenariosIndexRoute
  '/markets/$marketId/segments/new': typeof MarketsMarketIdSegmentsNewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/boards/': typeof BoardsIndexRoute
  '/challenges/': typeof ChallengesIndexRoute
  '/credits/': typeof CreditsIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/ebook-machine/': typeof EbookMachineIndexRoute
  '/email-writer/': typeof EmailWriterIndexRoute
  '/lucy/': typeof LucyIndexRoute
  '/marketplace/': typeof MarketplaceIndexRoute
  '/pricing/': typeof PricingIndexRoute
  '/radars/': typeof RadarsIndexRoute
  '/strategy/': typeof StrategyIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/boards/$boardId/': typeof BoardsBoardIdIndexRoute
  '/challenges/$challengeId/': typeof ChallengesChallengeIdIndexRoute
  '/dashboard/preferences/': typeof DashboardPreferencesIndexRoute
  '/marketplace/$listingId/': typeof MarketplaceListingIdIndexRoute
  '/markets/$marketId/': typeof MarketsMarketIdIndexRoute
  '/markets/new/': typeof MarketsNewIndexRoute
  '/strategy/canvas/': typeof StrategyCanvasIndexRoute
  '/opportunities/$opportunityId/scenarios/': typeof OpportunitiesOpportunityIdScenariosIndexRoute
  '/markets/$marketId/segments/new/': typeof MarketsMarketIdSegmentsNewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/boards'
    | '/challenges'
    | '/credits'
    | '/dashboard'
    | '/ebook-machine'
    | '/email-writer'
    | '/lucy'
    | '/marketplace'
    | '/pricing'
    | '/radars'
    | '/strategy'
    | '/auth/login'
    | '/auth/register'
    | '/boards/$boardId'
    | '/challenges/$challengeId'
    | '/dashboard/preferences'
    | '/marketplace/$listingId'
    | '/markets/$marketId'
    | '/markets/new'
    | '/strategy/canvas'
    | '/opportunities/$opportunityId/scenarios'
    | '/markets/$marketId/segments/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/boards'
    | '/challenges'
    | '/credits'
    | '/dashboard'
    | '/ebook-machine'
    | '/email-writer'
    | '/lucy'
    | '/marketplace'
    | '/pricing'
    | '/radars'
    | '/strategy'
    | '/auth/login'
    | '/auth/register'
    | '/boards/$boardId'
    | '/challenges/$challengeId'
    | '/dashboard/preferences'
    | '/marketplace/$listingId'
    | '/markets/$marketId'
    | '/markets/new'
    | '/strategy/canvas'
    | '/opportunities/$opportunityId/scenarios'
    | '/markets/$marketId/segments/new'
  id:
    | '__root__'
    | '/'
    | '/boards/'
    | '/challenges/'
    | '/credits/'
    | '/dashboard/'
    | '/ebook-machine/'
    | '/email-writer/'
    | '/lucy/'
    | '/marketplace/'
    | '/pricing/'
    | '/radars/'
    | '/strategy/'
    | '/auth/login/'
    | '/auth/register/'
    | '/boards/$boardId/'
    | '/challenges/$challengeId/'
    | '/dashboard/preferences/'
    | '/marketplace/$listingId/'
    | '/markets/$marketId/'
    | '/markets/new/'
    | '/strategy/canvas/'
    | '/opportunities/$opportunityId/scenarios/'
    | '/markets/$marketId/segments/new/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BoardsIndexRoute: typeof BoardsIndexRoute
  ChallengesIndexRoute: typeof ChallengesIndexRoute
  CreditsIndexRoute: typeof CreditsIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  EbookMachineIndexRoute: typeof EbookMachineIndexRoute
  EmailWriterIndexRoute: typeof EmailWriterIndexRoute
  LucyIndexRoute: typeof LucyIndexRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
  PricingIndexRoute: typeof PricingIndexRoute
  RadarsIndexRoute: typeof RadarsIndexRoute
  StrategyIndexRoute: typeof StrategyIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  BoardsBoardIdIndexRoute: typeof BoardsBoardIdIndexRoute
  ChallengesChallengeIdIndexRoute: typeof ChallengesChallengeIdIndexRoute
  DashboardPreferencesIndexRoute: typeof DashboardPreferencesIndexRoute
  MarketplaceListingIdIndexRoute: typeof MarketplaceListingIdIndexRoute
  MarketsMarketIdIndexRoute: typeof MarketsMarketIdIndexRoute
  MarketsNewIndexRoute: typeof MarketsNewIndexRoute
  StrategyCanvasIndexRoute: typeof StrategyCanvasIndexRoute
  OpportunitiesOpportunityIdScenariosIndexRoute: typeof OpportunitiesOpportunityIdScenariosIndexRoute
  MarketsMarketIdSegmentsNewIndexRoute: typeof MarketsMarketIdSegmentsNewIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BoardsIndexRoute: BoardsIndexRoute,
  ChallengesIndexRoute: ChallengesIndexRoute,
  CreditsIndexRoute: CreditsIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  EbookMachineIndexRoute: EbookMachineIndexRoute,
  EmailWriterIndexRoute: EmailWriterIndexRoute,
  LucyIndexRoute: LucyIndexRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
  PricingIndexRoute: PricingIndexRoute,
  RadarsIndexRoute: RadarsIndexRoute,
  StrategyIndexRoute: StrategyIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  BoardsBoardIdIndexRoute: BoardsBoardIdIndexRoute,
  ChallengesChallengeIdIndexRoute: ChallengesChallengeIdIndexRoute,
  DashboardPreferencesIndexRoute: DashboardPreferencesIndexRoute,
  MarketplaceListingIdIndexRoute: MarketplaceListingIdIndexRoute,
  MarketsMarketIdIndexRoute: MarketsMarketIdIndexRoute,
  MarketsNewIndexRoute: MarketsNewIndexRoute,
  StrategyCanvasIndexRoute: StrategyCanvasIndexRoute,
  OpportunitiesOpportunityIdScenariosIndexRoute:
    OpportunitiesOpportunityIdScenariosIndexRoute,
  MarketsMarketIdSegmentsNewIndexRoute: MarketsMarketIdSegmentsNewIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/boards/",
        "/challenges/",
        "/credits/",
        "/dashboard/",
        "/ebook-machine/",
        "/email-writer/",
        "/lucy/",
        "/marketplace/",
        "/pricing/",
        "/radars/",
        "/strategy/",
        "/auth/login/",
        "/auth/register/",
        "/boards/$boardId/",
        "/challenges/$challengeId/",
        "/dashboard/preferences/",
        "/marketplace/$listingId/",
        "/markets/$marketId/",
        "/markets/new/",
        "/strategy/canvas/",
        "/opportunities/$opportunityId/scenarios/",
        "/markets/$marketId/segments/new/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/boards/": {
      "filePath": "boards/index.tsx"
    },
    "/challenges/": {
      "filePath": "challenges/index.tsx"
    },
    "/credits/": {
      "filePath": "credits/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/ebook-machine/": {
      "filePath": "ebook-machine/index.tsx"
    },
    "/email-writer/": {
      "filePath": "email-writer.index.tsx"
    },
    "/lucy/": {
      "filePath": "lucy/index.tsx"
    },
    "/marketplace/": {
      "filePath": "marketplace/index.tsx"
    },
    "/pricing/": {
      "filePath": "pricing/index.tsx"
    },
    "/radars/": {
      "filePath": "radars/index.tsx"
    },
    "/strategy/": {
      "filePath": "strategy/index.tsx"
    },
    "/auth/login/": {
      "filePath": "auth/login.index.tsx"
    },
    "/auth/register/": {
      "filePath": "auth/register.index.tsx"
    },
    "/boards/$boardId/": {
      "filePath": "boards/$boardId.index.tsx"
    },
    "/challenges/$challengeId/": {
      "filePath": "challenges/$challengeId.index.tsx"
    },
    "/dashboard/preferences/": {
      "filePath": "dashboard/preferences.index.tsx"
    },
    "/marketplace/$listingId/": {
      "filePath": "marketplace/$listingId.index.tsx"
    },
    "/markets/$marketId/": {
      "filePath": "markets/$marketId.index.tsx"
    },
    "/markets/new/": {
      "filePath": "markets/new.index.tsx"
    },
    "/strategy/canvas/": {
      "filePath": "strategy/canvas/index.tsx"
    },
    "/opportunities/$opportunityId/scenarios/": {
      "filePath": "opportunities/$opportunityId/scenarios.index.tsx"
    },
    "/markets/$marketId/segments/new/": {
      "filePath": "markets/$marketId/segments/new.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
